// styles.scss
@import 'variables';
@import 'mixins';

/* 共通設定 */
* {
	box-sizing: border-box;
}
//英語のフォント
.english {
	font-family: $font-EN-serif;
	font-weight: normal;
    font-style: normal;
}
//ページタイトル
.page-title {
    //display:inline-block;
    position: relative;
    //z-index:20;
    text-align:center;
    margin: 1.5em auto 2em auto;
}
//ページタイトルの英語は変更を加える
.page-title .english{
	font-family: $font-EN-serif;
	font-weight: normal;
    font-style: normal;
    font-size: 1.3em;
    text-shadow: 0 2px 2px rgb(244, 210, 182);
}
//ページタイトルの装飾
.page-title:before {
	content:"";
	height: 0.5em;
	width: 6em;
	background-color:rgba(251, 231, 217, 0.3);
	box-shadow: 0 0 30px rgba(0, 0, 0, 0.2);
	filter: blur(4px);
	position: absolute;
	top: 60%;
	left: 50%;
	transform: translateX(-50%);
	z-index:-1;	
}


/* 全体構造 */
//bodyの自動横マージンを解除してヘッダーとフッターを両端まで広げるのと、フッター固定のために画面いっぱいにしておく
html, body {
    height: 100%;
    margin: 0;
    //background-color:rgba(248, 252, 255, 0.9);    
}

//フッターを下に固定するためにフレックボックスを利用。縦並びにだけ戻しておく
body {  
    display: flex;
    flex-direction: column;
    position: relative;
	@include body-background; 
}

//main要素が画面いっぱいに広がることでフッターを最下部に固定する
main {
	 flex: 1;
}

/* フォントとカラーのベースを設定 */
//標準サイズ（スマホを基準）
body {
  font-family: $font-JP-serif;
  font-size: $base-font-size;
  color: $primary-color;
}
//小さな画面幅でのサイズ変更
@media (mqx-width: $breakpoint-sm) {
  body {
    font-size: $small-font-size;
  }
}
//大きな画面幅でのサイズ変更
@media (min-width: $breakpoint-md) {
  body {
    font-size: $large-font-size;
  }
}


/* スマホ用スタイルがベース */
header {
    position: fixed;
    top: 0;
    width: 100%;
    @include back-ground-header;
    z-index: 1000;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
    height: auto;
    opacity: 80%;
}

/* タイトル行（タイトルとユーザーアイコン、ハンバーガーメニュー）の配置 */
.title-row {
    padding: 8px;
}
//タイトル
.title-row h1 {
	display: block;
	width: auto;
	text-align: center;
    margin: 0 0 4px 0; //文字が少し下に見えるので底上げしつつ余計なmarginを消す    
}
.title-row h1 a {
	text-decoration: none;
	color: $primary-color;
	font-family: $font-EN-serif;
	font-weight: normal;
    font-style: normal;    
    text-shadow: 2px 2px 2px rgba(251, 231, 217, 1);
}

//ユーザーメニューアイコン領域
.user-menu {
	position: absolute;
	top: 45%;
	transform: translateY(-50%);
	right: 15%;
    font-size: 1.8em;
}
//ユーザーメニューアイコン
.user-icon {
    cursor: pointer;
    //なぜかここでフォントサイズの変更ができないため親要素で指定
}
//アイコンクリック時に表示する場所の調整（初期状態は非表示）
.user-menu-dropdown {
    display: none;
    position: absolute;
    right: 0;
    top: 100%;
    background-color: #f5f5f5;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    padding: 10px;
    width: fit-content;
    white-space: nowrap;
}
//ユーザーメニューの微調整
.user-menu-dropdown a {
    display: block;
    padding: 5px 10px;
    text-decoration: none;
    color: $primary-color;
    font-size: 0.5em;
}

//ハンバーガーメニューの領域
.hamburger-menu {
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	right: 5%;
    width: 30px;
    cursor: pointer;    
}
//各線の形と色
.hamburger,
.hamburger::before,
.hamburger::after {
    content: '';
    display: block;
    width: 100%;
    height: 3px;
    background-color: #000000;
    transition: all 0.6s ease;
}
//各線の位置
.hamburger {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}
.hamburger::before {
    position: absolute;
    top: -10px;
}
.hamburger::after {
    position: absolute;
    top: 10px;
}

/* ハンバーガーメニューの開閉状態 */
//openクラスが付与されたら真ん中の線は消える
.hamburger.open {
    background-color: transparent;
}
//上の線は回転して斜めになる
.hamburger.open::before {
    transform: rotate(45deg);
    top: 0;
}
//下の線は回転して斜めになる
.hamburger.open::after {
    transform: rotate(-45deg);
    top: 0;
}

/* ナビゲーションの開閉管理 */
//ナビゲーション行（デフォルトでは非表示だがフレックス時の設定はしておく）
@media (max-width: 769px) {
	.nav-row {
		//background-color: $primary-back-color;
		@include back-ground-nav();
		position: absolute;
		top: 100%;
		right: 0;
		transform: translateX(100%);
		transition: all 0.5s ease;
	    display: flex;
	    flex-direction: column;
	    align-items: center;
	    padding: 30px 1.5em;
	    height: 100vh;
	    font-size: 1.2em
	}
}	
//ハンバーガークリックでactiveになったら表示状態にする
.nav-row.active {
    transform: translateX(0%);
}

/* ナビゲーションリンクのスタイル */
//リンクの並びと間隔の調整
.nav-links {
    display: flex;
    flex-direction: column;
    gap: 10px;
    list-style: none;
    padding: 0;
    margin: 0;
}
//各リンクの文字色等
.nav-links li a {
    text-decoration: none;
    color: $primary-color;
    padding: 5px 10px;
}
//ホバー時（PC）
.nav-links li a:hover {
    background-color: #f0f0f0;
    color: #0066cc;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

/* ユーザーメニューのポップアップ表示 */
//アイコンクリック時のみブロックにする
.user-icon.active + .user-menu-dropdown {
    display: block;
}



/* PC用スタイル */
@media (min-width: 769px) {
	//ナビゲーションを無視して配置されるため間を空ける
	main {
		padding-top: 20px;
	}
	//ナビゲーションまで高さに含める
	header {
		height: auto;
	}
	//タイトル行
    .title-row {
        justify-content: center;
        padding: 5px 10px;
    }
	//flexにしなくてもいいと思うが、これでnavに幅を持たせておくのがよいか
    .nav-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 5px 10px;        
        height: auto;
    }
    //ナビメニューを中央に寄せる
    nav {
    	margin: 0 auto;
    }
	//横並びに配置
    .nav-links {
        flex-direction: row;
        gap: 15px;
    }
    //各リンク
    .nav-links li a {
        padding: 8px 15px;
    }
    //ハンバーガーは非表示
    .hamburger-menu {
        display: none;
    }
	//アイコンの位置調整
    .user-menu {
        position: absolute;
        right: 35px;
        top: 20px;
        margin: 0;
    }
	//ユーザーメニューの位置調整
    .user-menu-dropdown {
        top: 110%;
    }
}

//フッター　最下部固定はbody内のフレックボックスで処理
.footer {
	bottom:0px;
	height: 40px;
	padding: 10px 0;
	text-align: center;
}


/*
.btn:focus, .btn:active:focus, .btn-link.nav-link:focus, .form-control:focus, .form-check-input:focus {
  box-shadow: 0 0 0 0.1rem white, 0 0 0 0.25rem #258cfb;
}


button {
  background-color: $primary-back-color;
  color: $secondary-color;
  border: none;
  padding: 10px 20px;
  cursor: pointer;
  @include border-radius(5px);
}
*/